import { createContext, useContext, useState, useEffect, ReactNode } from 'react';

export type Language = 'en' | 'hi';

interface LanguageContextType {
  language: Language;
  setLanguage: (lang: Language) => void;
  t: (key: string) => string;
}

const LanguageContext = createContext<LanguageContextType | undefined>(undefined);

const translations = {
  en: {
    // Header
    'header.logo': 'ArogyaAI',
    'header.tagline': 'Smarter Healthcare',
    'header.search': 'Search health topics...',
    'header.nav.home': 'Home',
    'header.nav.assistant': 'AI Assistant',
    'header.nav.dashboard': 'Dashboard', 
    'header.nav.faq': 'FAQ',
    'header.nav.blog': 'Blog',

    // Hero
    'hero.badge': 'üöÄ New: AI Health Assistant 2.0',
    'hero.title': 'Smarter Healthcare with AI',
    'hero.description': 'ArogyaAI empowers communities with real-time health insights, AI-powered diagnostics, and personalized care recommendations‚Äîall in one intelligent platform.',
    'hero.cta.primary': 'Start AI Consultation',
    'hero.cta.secondary': 'Learn More',
    'hero.features.diagnosis': 'AI-Powered Diagnosis',
    'hero.features.compliant': 'HIPAA Compliant',
    'hero.features.instant': 'Instant Results',
    'hero.features.monitoring': 'Real-time Monitoring',
    'hero.language': 'Choose your language:',
    'hero.stats.users': 'Users Helped',
    'hero.stats.accuracy': 'Accuracy Rate',
    'hero.stats.available': 'Available',
    'hero.stats.languages': 'Languages',

    // Features
    'features.badge': '‚ú® Core Features',
    'features.title': 'Everything you need for smarter healthcare',
    'features.description': 'Our comprehensive platform combines AI technology with medical expertise to deliver personalized healthcare solutions.',
    'features.ai.title': 'AI Health Assistant',
    'features.ai.description': 'Get instant, personalized health advice powered by advanced AI algorithms trained on medical knowledge.',
    'features.ai.feature1': 'Natural language processing',
    'features.ai.feature2': 'Symptom analysis', 
    'features.ai.feature3': 'Treatment suggestions',
    'features.symptom.title': 'Smart Symptom Checker',
    'features.symptom.description': 'Advanced diagnostic tool that analyzes your symptoms and provides accurate health assessments.',
    'features.symptom.feature1': 'Multi-symptom analysis',
    'features.symptom.feature2': 'Risk assessment',
    'features.symptom.feature3': 'Doctor recommendations',
    'features.alerts.title': 'Health Alerts & Reminders',
    'features.alerts.description': 'Stay on top of your health with intelligent notifications and personalized reminders.',
    'features.alerts.feature1': 'Vaccination reminders',
    'features.alerts.feature2': 'Medication alerts',
    'features.alerts.feature3': 'Health checkups',
    'features.privacy.title': 'Privacy First',
    'features.privacy.description': 'End-to-end encryption for all your health data',
    'features.family.title': 'Family Profiles',
    'features.family.description': 'Manage health for your entire family',
    'features.analytics.title': 'Health Analytics',
    'features.analytics.description': 'Track trends and get insights',
    'features.availability.title': '24/7 Availability',
    'features.availability.description': 'Access healthcare advice anytime',
    'features.wellness.title': 'Wellness Tracking',
    'features.wellness.description': 'Monitor vital signs and activities',
    'features.mental.title': 'Mental Health',
    'features.mental.description': 'AI-powered mental wellness support',
    'features.cta.title': 'Ready to experience the future of healthcare?',
    'features.cta.description': 'Join thousands of users who trust ArogyaAI for their health and wellness needs.',
    'features.cta.try': 'Try AI Assistant Now',
    'features.cta.view': 'View Dashboard',

    // ChatBot
    'chatbot.badge': 'ü§ñ AI Assistant',
    'chatbot.title': 'Chat with our AI Health Assistant',
    'chatbot.description': 'Get instant health advice, symptom analysis, and medical information from our advanced AI system trained on medical knowledge.',
    'chatbot.status': 'Online ‚Ä¢ Powered by Medical AI',
    'chatbot.placeholder': 'Ask me about your health concerns...',
    'chatbot.helpful': 'Was this helpful?',
    'chatbot.greeting': 'Hello! I\'m your AI Health Assistant. How can I help you today? You can ask me about symptoms, medications, health advice, or general wellness questions.',
    'chatbot.quick.headache': 'I have a headache and fever',
    'chatbot.quick.flu': 'What are the symptoms of flu?',
    'chatbot.quick.bp': 'How to maintain healthy blood pressure?',
    'chatbot.quick.doctor': 'When should I see a doctor?',
    'chatbot.quick.vaccine': 'COVID-19 vaccination schedule',

    // Dashboard
    'dashboard.badge': 'üìä Your Health Dashboard',
    'dashboard.title': 'Personal Health Center',
    'dashboard.description': 'Track your health metrics, view consultation history, and manage your wellness journey in one comprehensive dashboard.',
    'dashboard.tabs.overview': 'Overview',
    'dashboard.tabs.consultations': 'Consultations',
    'dashboard.tabs.reminders': 'Reminders',
    'dashboard.tabs.vaccines': 'Vaccines',
    'dashboard.tabs.settings': 'Settings',
    'dashboard.metrics.bp': 'Blood Pressure',
    'dashboard.metrics.hr': 'Heart Rate',
    'dashboard.metrics.weight': 'Weight',
    'dashboard.metrics.bmi': 'BMI',
    'dashboard.goals.title': 'Health Goals Progress',
    'dashboard.goals.steps': 'Daily Steps',
    'dashboard.goals.water': 'Water Intake',
    'dashboard.goals.sleep': 'Sleep Hours',
    'dashboard.goals.exercise': 'Exercise',
    'dashboard.vaccines.title': 'Vaccination Schedule',
    'dashboard.vaccines.completed': 'Completed',
    'dashboard.vaccines.upcoming': 'Upcoming',
    'dashboard.vaccines.overdue': 'Overdue',

    // Common
    'common.loading': 'Loading...',
    'common.error': 'Something went wrong',
    'common.retry': 'Try Again',
    'common.cancel': 'Cancel',
    'common.save': 'Save',
    'common.edit': 'Edit',
    'common.delete': 'Delete',
    'common.confirm': 'Confirm'
  },
  hi: {
    // Header
    'header.logo': '‡§Ü‡§∞‡•ã‡§ó‡•ç‡§ØAI',
    'header.tagline': '‡§¨‡•á‡§π‡§§‡§∞ ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∏‡•á‡§µ‡§æ',
    'header.search': '‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§µ‡§ø‡§∑‡§Ø‡•ã‡§Ç ‡§ï‡•Ä ‡§ñ‡•ã‡§ú ‡§ï‡§∞‡•á‡§Ç...',
    'header.nav.home': '‡§π‡•ã‡§Æ',
    'header.nav.assistant': 'AI ‡§∏‡§π‡§æ‡§Ø‡§ï',
    'header.nav.dashboard': '‡§°‡•à‡§∂‡§¨‡•ã‡§∞‡•ç‡§°',
    'header.nav.faq': '‡§™‡•ç‡§∞‡§∂‡•ç‡§® ‡§â‡§§‡•ç‡§§‡§∞',
    'header.nav.blog': '‡§¨‡•ç‡§≤‡•â‡§ó',

    // Hero
    'hero.badge': 'üöÄ ‡§®‡§Ø‡§æ: AI ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∏‡§π‡§æ‡§Ø‡§ï 2.0',
    'hero.title': 'AI ‡§ï‡•á ‡§∏‡§æ‡§• ‡§¨‡•á‡§π‡§§‡§∞ ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∏‡•á‡§µ‡§æ',
    'hero.description': '‡§Ü‡§∞‡•ã‡§ó‡•ç‡§ØAI ‡§∏‡§Æ‡•Å‡§¶‡§æ‡§Ø‡•ã‡§Ç ‡§ï‡•ã ‡§µ‡§æ‡§∏‡•ç‡§§‡§µ‡§ø‡§ï ‡§∏‡§Æ‡§Ø ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§Ö‡§Ç‡§§‡§∞‡•ç‡§¶‡•É‡§∑‡•ç‡§ü‡§ø, AI-‡§∏‡§Ç‡§ö‡§æ‡§≤‡§ø‡§§ ‡§®‡§ø‡§¶‡§æ‡§®, ‡§î‡§∞ ‡§µ‡•ç‡§Ø‡§ï‡•ç‡§§‡§ø‡§ó‡§§ ‡§¶‡•á‡§ñ‡§≠‡§æ‡§≤ ‡§∏‡§ø‡§´‡§æ‡§∞‡§ø‡§∂‡•ã‡§Ç ‡§ï‡•á ‡§∏‡§æ‡§• ‡§∏‡§∂‡§ï‡•ç‡§§ ‡§¨‡§®‡§æ‡§§‡§æ ‡§π‡•à‚Äî‡§∏‡§¨ ‡§ï‡•Å‡§õ ‡§è‡§ï ‡§¨‡•Å‡§¶‡•ç‡§ß‡§ø‡§Æ‡§æ‡§® ‡§™‡•ç‡§≤‡•á‡§ü‡§´‡•â‡§∞‡•ç‡§Æ ‡§Æ‡•á‡§Ç‡•§',
    'hero.cta.primary': 'AI ‡§™‡§∞‡§æ‡§Æ‡§∞‡•ç‡§∂ ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•á‡§Ç',
    'hero.cta.secondary': '‡§î‡§∞ ‡§ú‡§æ‡§®‡•á‡§Ç',
    'hero.features.diagnosis': 'AI-‡§∏‡§Ç‡§ö‡§æ‡§≤‡§ø‡§§ ‡§®‡§ø‡§¶‡§æ‡§®',
    'hero.features.compliant': 'HIPAA ‡§Ö‡§®‡•Å‡§™‡§æ‡§≤‡§ø‡§§',
    'hero.features.instant': '‡§§‡§§‡•ç‡§ï‡§æ‡§≤ ‡§™‡§∞‡§ø‡§£‡§æ‡§Æ',
    'hero.features.monitoring': '‡§µ‡§æ‡§∏‡•ç‡§§‡§µ‡§ø‡§ï ‡§∏‡§Æ‡§Ø ‡§®‡§ø‡§ó‡§∞‡§æ‡§®‡•Ä',
    'hero.language': '‡§Ö‡§™‡§®‡•Ä ‡§≠‡§æ‡§∑‡§æ ‡§ö‡•Å‡§®‡•á‡§Ç:',
    'hero.stats.users': '‡§â‡§™‡§Ø‡•ã‡§ó‡§ï‡§∞‡•ç‡§§‡§æ ‡§Æ‡§¶‡§¶ ‡§ï‡•Ä',
    'hero.stats.accuracy': '‡§∏‡§ü‡•Ä‡§ï‡§§‡§æ ‡§¶‡§∞',
    'hero.stats.available': '‡§â‡§™‡§≤‡§¨‡•ç‡§ß',
    'hero.stats.languages': '‡§≠‡§æ‡§∑‡§æ‡§è‡§Ç',

    // Features
    'features.badge': '‚ú® ‡§Æ‡•Å‡§ñ‡•ç‡§Ø ‡§∏‡•Å‡§µ‡§ø‡§ß‡§æ‡§è‡§Ç',
    'features.title': '‡§¨‡•á‡§π‡§§‡§∞ ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∏‡•á‡§µ‡§æ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ü‡§™‡§ï‡•ã ‡§ú‡•ã ‡§ï‡•Å‡§õ ‡§ö‡§æ‡§π‡§ø‡§è',
    'features.description': '‡§π‡§Æ‡§æ‡§∞‡§æ ‡§µ‡•ç‡§Ø‡§æ‡§™‡§ï ‡§™‡•ç‡§≤‡•á‡§ü‡§´‡•â‡§∞‡•ç‡§Æ ‡§µ‡•ç‡§Ø‡§ï‡•ç‡§§‡§ø‡§ó‡§§ ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∏‡§Æ‡§æ‡§ß‡§æ‡§® ‡§™‡•ç‡§∞‡§¶‡§æ‡§® ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è AI ‡§§‡§ï‡§®‡•Ä‡§ï ‡§ï‡•ã ‡§ö‡§ø‡§ï‡§ø‡§§‡•ç‡§∏‡§æ ‡§µ‡§ø‡§∂‡•á‡§∑‡§ú‡•ç‡§û‡§§‡§æ ‡§ï‡•á ‡§∏‡§æ‡§• ‡§ú‡•ã‡§°‡§º‡§§‡§æ ‡§π‡•à‡•§',
    'features.ai.title': 'AI ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∏‡§π‡§æ‡§Ø‡§ï',
    'features.ai.description': '‡§ö‡§ø‡§ï‡§ø‡§§‡•ç‡§∏‡§æ ‡§ú‡•ç‡§û‡§æ‡§® ‡§™‡§∞ ‡§™‡•ç‡§∞‡§∂‡§ø‡§ï‡•ç‡§∑‡§ø‡§§ ‡§â‡§®‡•ç‡§®‡§§ AI ‡§è‡§≤‡•ç‡§ó‡•ã‡§∞‡§ø‡§¶‡§Æ ‡§¶‡•ç‡§µ‡§æ‡§∞‡§æ ‡§∏‡§Ç‡§ö‡§æ‡§≤‡§ø‡§§ ‡§§‡§§‡•ç‡§ï‡§æ‡§≤, ‡§µ‡•ç‡§Ø‡§ï‡•ç‡§§‡§ø‡§ó‡§§ ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∏‡§≤‡§æ‡§π ‡§™‡•ç‡§∞‡§æ‡§™‡•ç‡§§ ‡§ï‡§∞‡•á‡§Ç‡•§',
    'features.ai.feature1': '‡§™‡•ç‡§∞‡§æ‡§ï‡•É‡§§‡§ø‡§ï ‡§≠‡§æ‡§∑‡§æ ‡§™‡•ç‡§∞‡§∏‡§Ç‡§∏‡•ç‡§ï‡§∞‡§£',
    'features.ai.feature2': '‡§≤‡§ï‡•ç‡§∑‡§£ ‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£',
    'features.ai.feature3': '‡§â‡§™‡§ö‡§æ‡§∞ ‡§∏‡•Å‡§ù‡§æ‡§µ',
    'features.symptom.title': '‡§∏‡•ç‡§Æ‡§æ‡§∞‡•ç‡§ü ‡§≤‡§ï‡•ç‡§∑‡§£ ‡§ú‡§æ‡§Ç‡§ö‡§ï‡§∞‡•ç‡§§‡§æ',
    'features.symptom.description': '‡§â‡§®‡•ç‡§®‡§§ ‡§®‡§ø‡§¶‡§æ‡§® ‡§â‡§™‡§ï‡§∞‡§£ ‡§ú‡•ã ‡§Ü‡§™‡§ï‡•á ‡§≤‡§ï‡•ç‡§∑‡§£‡•ã‡§Ç ‡§ï‡§æ ‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£ ‡§ï‡§∞‡§§‡§æ ‡§π‡•à ‡§î‡§∞ ‡§∏‡§ü‡•Ä‡§ï ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§Æ‡•Ç‡§≤‡•ç‡§Ø‡§æ‡§Ç‡§ï‡§® ‡§™‡•ç‡§∞‡§¶‡§æ‡§® ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§',
    'features.symptom.feature1': '‡§¨‡§π‡•Å-‡§≤‡§ï‡•ç‡§∑‡§£ ‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£',
    'features.symptom.feature2': '‡§ú‡•ã‡§ñ‡§ø‡§Æ ‡§Æ‡•Ç‡§≤‡•ç‡§Ø‡§æ‡§Ç‡§ï‡§®',
    'features.symptom.feature3': '‡§°‡•â‡§ï‡•ç‡§ü‡§∞ ‡§∏‡§ø‡§´‡§æ‡§∞‡§ø‡§∂‡•á‡§Ç',
    'features.alerts.title': '‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§Ö‡§≤‡§∞‡•ç‡§ü ‡§î‡§∞ ‡§Ö‡§®‡•Å‡§∏‡•ç‡§Æ‡§æ‡§∞‡§ï',
    'features.alerts.description': '‡§¨‡•Å‡§¶‡•ç‡§ß‡§ø‡§Æ‡§æ‡§® ‡§∏‡•Ç‡§ö‡§®‡§æ‡§ì‡§Ç ‡§î‡§∞ ‡§µ‡•ç‡§Ø‡§ï‡•ç‡§§‡§ø‡§ó‡§§ ‡§Ö‡§®‡•Å‡§∏‡•ç‡§Æ‡§æ‡§∞‡§ï‡•ã‡§Ç ‡§ï‡•á ‡§∏‡§æ‡§• ‡§Ö‡§™‡§®‡•á ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§ï‡•á ‡§∂‡•Ä‡§∞‡•ç‡§∑ ‡§™‡§∞ ‡§∞‡§π‡•á‡§Ç‡•§',
    'features.alerts.feature1': '‡§ü‡•Ä‡§ï‡§æ‡§ï‡§∞‡§£ ‡§Ö‡§®‡•Å‡§∏‡•ç‡§Æ‡§æ‡§∞‡§ï',
    'features.alerts.feature2': '‡§¶‡§µ‡§æ ‡§Ö‡§≤‡§∞‡•ç‡§ü',
    'features.alerts.feature3': '‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§ú‡§æ‡§Ç‡§ö',
    'features.privacy.title': '‡§ó‡•ã‡§™‡§®‡•Ä‡§Ø‡§§‡§æ ‡§™‡§π‡§≤‡•á',
    'features.privacy.description': '‡§Ü‡§™‡§ï‡•á ‡§∏‡§≠‡•Ä ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§°‡•á‡§ü‡§æ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§è‡§Ç‡§°-‡§ü‡•Ç-‡§è‡§Ç‡§° ‡§è‡§®‡•ç‡§ï‡•ç‡§∞‡§ø‡§™‡•ç‡§∂‡§®',
    'features.family.title': '‡§™‡§æ‡§∞‡§ø‡§µ‡§æ‡§∞‡§ø‡§ï ‡§™‡•ç‡§∞‡•ã‡§´‡§æ‡§á‡§≤',
    'features.family.description': '‡§Ö‡§™‡§®‡•á ‡§™‡•Ç‡§∞‡•á ‡§™‡§∞‡§ø‡§µ‡§æ‡§∞ ‡§ï‡•á ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§ï‡§æ ‡§™‡•ç‡§∞‡§¨‡§Ç‡§ß‡§® ‡§ï‡§∞‡•á‡§Ç',
    'features.analytics.title': '‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£',
    'features.analytics.description': '‡§∞‡•Å‡§ù‡§æ‡§®‡•ã‡§Ç ‡§ï‡•ã ‡§ü‡•ç‡§∞‡•à‡§ï ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§Ö‡§Ç‡§§‡§∞‡•ç‡§¶‡•É‡§∑‡•ç‡§ü‡§ø ‡§™‡•ç‡§∞‡§æ‡§™‡•ç‡§§ ‡§ï‡§∞‡•á‡§Ç',
    'features.availability.title': '24/7 ‡§â‡§™‡§≤‡§¨‡•ç‡§ß‡§§‡§æ',
    'features.availability.description': '‡§ï‡§≠‡•Ä ‡§≠‡•Ä ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∏‡§≤‡§æ‡§π ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç',
    'features.wellness.title': '‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§ü‡•ç‡§∞‡•à‡§ï‡§ø‡§Ç‡§ó',
    'features.wellness.description': '‡§Æ‡§π‡§§‡•ç‡§µ‡§™‡•Ç‡§∞‡•ç‡§£ ‡§∏‡§Ç‡§ï‡•á‡§§‡§ï ‡§î‡§∞ ‡§ó‡§§‡§ø‡§µ‡§ø‡§ß‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•Ä ‡§®‡§ø‡§ó‡§∞‡§æ‡§®‡•Ä ‡§ï‡§∞‡•á‡§Ç',
    'features.mental.title': '‡§Æ‡§æ‡§®‡§∏‡§ø‡§ï ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø',
    'features.mental.description': 'AI-‡§∏‡§Ç‡§ö‡§æ‡§≤‡§ø‡§§ ‡§Æ‡§æ‡§®‡§∏‡§ø‡§ï ‡§ï‡§≤‡•ç‡§Ø‡§æ‡§£ ‡§∏‡§Æ‡§∞‡•ç‡§•‡§®',
    'features.cta.title': '‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∏‡•á‡§µ‡§æ ‡§ï‡•á ‡§≠‡§µ‡§ø‡§∑‡•ç‡§Ø ‡§ï‡§æ ‡§Ö‡§®‡•Å‡§≠‡§µ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§§‡•à‡§Ø‡§æ‡§∞ ‡§π‡•à‡§Ç?',
    'features.cta.description': '‡§π‡§ú‡§æ‡§∞‡•ã‡§Ç ‡§â‡§™‡§Ø‡•ã‡§ó‡§ï‡§∞‡•ç‡§§‡§æ‡§ì‡§Ç ‡§Æ‡•á‡§Ç ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§π‡•ã‡§Ç ‡§ú‡•ã ‡§Ö‡§™‡§®‡•Ä ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§î‡§∞ ‡§ï‡§≤‡•ç‡§Ø‡§æ‡§£ ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï‡§§‡§æ‡§ì‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ü‡§∞‡•ã‡§ó‡•ç‡§ØAI ‡§™‡§∞ ‡§≠‡§∞‡•ã‡§∏‡§æ ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§',
    'features.cta.try': 'AI ‡§∏‡§π‡§æ‡§Ø‡§ï ‡§ï‡•ã ‡§Ö‡§≠‡•Ä ‡§Ü‡§ú‡§º‡§Æ‡§æ‡§è‡§Ç',
    'features.cta.view': '‡§°‡•à‡§∂‡§¨‡•ã‡§∞‡•ç‡§° ‡§¶‡•á‡§ñ‡•á‡§Ç',

    // ChatBot
    'chatbot.badge': 'ü§ñ AI ‡§∏‡§π‡§æ‡§Ø‡§ï',
    'chatbot.title': '‡§π‡§Æ‡§æ‡§∞‡•á AI ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∏‡§π‡§æ‡§Ø‡§ï ‡§ï‡•á ‡§∏‡§æ‡§• ‡§ö‡•à‡§ü ‡§ï‡§∞‡•á‡§Ç',
    'chatbot.description': '‡§ö‡§ø‡§ï‡§ø‡§§‡•ç‡§∏‡§æ ‡§ú‡•ç‡§û‡§æ‡§® ‡§™‡§∞ ‡§™‡•ç‡§∞‡§∂‡§ø‡§ï‡•ç‡§∑‡§ø‡§§ ‡§π‡§Æ‡§æ‡§∞‡•á ‡§â‡§®‡•ç‡§®‡§§ AI ‡§∏‡§ø‡§∏‡•ç‡§ü‡§Æ ‡§∏‡•á ‡§§‡§§‡•ç‡§ï‡§æ‡§≤ ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∏‡§≤‡§æ‡§π, ‡§≤‡§ï‡•ç‡§∑‡§£ ‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£ ‡§î‡§∞ ‡§ö‡§ø‡§ï‡§ø‡§§‡•ç‡§∏‡§æ ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§™‡•ç‡§∞‡§æ‡§™‡•ç‡§§ ‡§ï‡§∞‡•á‡§Ç‡•§',
    'chatbot.status': '‡§ë‡§®‡§≤‡§æ‡§á‡§® ‚Ä¢ ‡§Æ‡•á‡§°‡§ø‡§ï‡§≤ AI ‡§¶‡•ç‡§µ‡§æ‡§∞‡§æ ‡§∏‡§Ç‡§ö‡§æ‡§≤‡§ø‡§§',
    'chatbot.placeholder': '‡§Ö‡§™‡§®‡•Ä ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§ö‡§ø‡§Ç‡§§‡§æ‡§ì‡§Ç ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§Æ‡•Å‡§ù‡§∏‡•á ‡§™‡•Ç‡§õ‡•á‡§Ç...',
    'chatbot.helpful': '‡§ï‡•ç‡§Ø‡§æ ‡§Ø‡§π ‡§∏‡§π‡§æ‡§Ø‡§ï ‡§•‡§æ?',
    'chatbot.greeting': '‡§®‡§Æ‡§∏‡•ç‡§§‡•á! ‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡§æ AI ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∏‡§π‡§æ‡§Ø‡§ï ‡§π‡•Ç‡§Ç‡•§ ‡§Ü‡§ú ‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡•Ä ‡§ï‡•à‡§∏‡•á ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ ‡§ï‡§∞ ‡§∏‡§ï‡§§‡§æ ‡§π‡•Ç‡§Ç? ‡§Ü‡§™ ‡§Æ‡•Å‡§ù‡§∏‡•á ‡§≤‡§ï‡•ç‡§∑‡§£, ‡§¶‡§µ‡§æ‡§è‡§Ç, ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§∏‡§≤‡§æ‡§π, ‡§Ø‡§æ ‡§∏‡§æ‡§Æ‡§æ‡§®‡•ç‡§Ø ‡§ï‡§≤‡•ç‡§Ø‡§æ‡§£ ‡§™‡•ç‡§∞‡§∂‡•ç‡§®‡•ã‡§Ç ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§™‡•Ç‡§õ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç‡•§',
    'chatbot.quick.headache': '‡§Æ‡•Å‡§ù‡•á ‡§∏‡§ø‡§∞‡§¶‡§∞‡•ç‡§¶ ‡§î‡§∞ ‡§¨‡•Å‡§ñ‡§æ‡§∞ ‡§π‡•à',
    'chatbot.quick.flu': '‡§´‡•ç‡§≤‡•Ç ‡§ï‡•á ‡§≤‡§ï‡•ç‡§∑‡§£ ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•à‡§Ç?',
    'chatbot.quick.bp': '‡§∏‡•ç‡§µ‡§∏‡•ç‡§• ‡§∞‡§ï‡•ç‡§§‡§ö‡§æ‡§™ ‡§ï‡•à‡§∏‡•á ‡§¨‡§®‡§æ‡§è ‡§∞‡§ñ‡•á‡§Ç?',
    'chatbot.quick.doctor': '‡§°‡•â‡§ï‡•ç‡§ü‡§∞ ‡§ï‡•ã ‡§ï‡§¨ ‡§¶‡§ø‡§ñ‡§æ‡§®‡§æ ‡§ö‡§æ‡§π‡§ø‡§è?',
    'chatbot.quick.vaccine': 'COVID-19 ‡§ü‡•Ä‡§ï‡§æ‡§ï‡§∞‡§£ ‡§Ö‡§®‡•Å‡§∏‡•Ç‡§ö‡•Ä',

    // Dashboard
    'dashboard.badge': 'üìä ‡§Ü‡§™‡§ï‡§æ ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§°‡•à‡§∂‡§¨‡•ã‡§∞‡•ç‡§°',
    'dashboard.title': '‡§µ‡•ç‡§Ø‡§ï‡•ç‡§§‡§ø‡§ó‡§§ ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§ï‡•á‡§Ç‡§¶‡•ç‡§∞',
    'dashboard.description': '‡§Ö‡§™‡§®‡•á ‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§Æ‡•á‡§ü‡•ç‡§∞‡§ø‡§ï‡•ç‡§∏ ‡§ï‡•ã ‡§ü‡•ç‡§∞‡•à‡§ï ‡§ï‡§∞‡•á‡§Ç, ‡§™‡§∞‡§æ‡§Æ‡§∞‡•ç‡§∂ ‡§á‡§§‡§ø‡§π‡§æ‡§∏ ‡§¶‡•á‡§ñ‡•á‡§Ç, ‡§î‡§∞ ‡§è‡§ï ‡§µ‡•ç‡§Ø‡§æ‡§™‡§ï ‡§°‡•à‡§∂‡§¨‡•ã‡§∞‡•ç‡§° ‡§Æ‡•á‡§Ç ‡§Ö‡§™‡§®‡•Ä ‡§ï‡§≤‡•ç‡§Ø‡§æ‡§£ ‡§Ø‡§æ‡§§‡•ç‡§∞‡§æ ‡§ï‡§æ ‡§™‡•ç‡§∞‡§¨‡§Ç‡§ß‡§® ‡§ï‡§∞‡•á‡§Ç‡•§',
    'dashboard.tabs.overview': '‡§Ö‡§µ‡§≤‡•ã‡§ï‡§®',
    'dashboard.tabs.consultations': '‡§™‡§∞‡§æ‡§Æ‡§∞‡•ç‡§∂',
    'dashboard.tabs.reminders': '‡§Ö‡§®‡•Å‡§∏‡•ç‡§Æ‡§æ‡§∞‡§ï',
    'dashboard.tabs.vaccines': '‡§ü‡•Ä‡§ï‡•á',
    'dashboard.tabs.settings': '‡§∏‡•á‡§ü‡§ø‡§Ç‡§ó‡•ç‡§∏',
    'dashboard.metrics.bp': '‡§∞‡§ï‡•ç‡§§‡§ö‡§æ‡§™',
    'dashboard.metrics.hr': '‡§π‡•É‡§¶‡§Ø ‡§ó‡§§‡§ø',
    'dashboard.metrics.weight': '‡§µ‡§ú‡§®',
    'dashboard.metrics.bmi': 'BMI',
    'dashboard.goals.title': '‡§∏‡•ç‡§µ‡§æ‡§∏‡•ç‡§•‡•ç‡§Ø ‡§≤‡§ï‡•ç‡§∑‡•ç‡§Ø ‡§™‡•ç‡§∞‡§ó‡§§‡§ø',
    'dashboard.goals.steps': '‡§¶‡•à‡§®‡§ø‡§ï ‡§ï‡§¶‡§Æ',
    'dashboard.goals.water': '‡§™‡§æ‡§®‡•Ä ‡§ï‡§æ ‡§∏‡•á‡§µ‡§®',
    'dashboard.goals.sleep': '‡§®‡•Ä‡§Ç‡§¶ ‡§ï‡•á ‡§ò‡§Ç‡§ü‡•á',
    'dashboard.goals.exercise': '‡§µ‡•ç‡§Ø‡§æ‡§Ø‡§æ‡§Æ',
    'dashboard.vaccines.title': '‡§ü‡•Ä‡§ï‡§æ‡§ï‡§∞‡§£ ‡§Ö‡§®‡•Å‡§∏‡•Ç‡§ö‡•Ä',
    'dashboard.vaccines.completed': '‡§™‡•Ç‡§∞‡•ç‡§£',
    'dashboard.vaccines.upcoming': '‡§Ü‡§ó‡§æ‡§Æ‡•Ä',
    'dashboard.vaccines.overdue': '‡§¨‡§ï‡§æ‡§Ø‡§æ',

    // Common
    'common.loading': '‡§≤‡•ã‡§° ‡§π‡•ã ‡§∞‡§π‡§æ ‡§π‡•à...',
    'common.error': '‡§ï‡•Å‡§õ ‡§ó‡§≤‡§§ ‡§π‡•Å‡§Ü',
    'common.retry': '‡§´‡§ø‡§∞ ‡§∏‡•á ‡§ï‡•ã‡§∂‡§ø‡§∂ ‡§ï‡§∞‡•á‡§Ç',
    'common.cancel': '‡§∞‡§¶‡•ç‡§¶ ‡§ï‡§∞‡•á‡§Ç',
    'common.save': '‡§∏‡•á‡§µ ‡§ï‡§∞‡•á‡§Ç',
    'common.edit': '‡§∏‡§Ç‡§™‡§æ‡§¶‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç',
    'common.delete': '‡§π‡§ü‡§æ‡§è‡§Ç',
    'common.confirm': '‡§™‡•Å‡§∑‡•ç‡§ü‡§ø ‡§ï‡§∞‡•á‡§Ç'
  }
};

export const LanguageProvider = ({ children }: { children: ReactNode }) => {
  const [language, setLanguage] = useState<Language>('en');

  useEffect(() => {
    const savedLanguage = localStorage.getItem('language') as Language;
    if (savedLanguage && (savedLanguage === 'en' || savedLanguage === 'hi')) {
      setLanguage(savedLanguage);
    }
  }, []);

  const handleSetLanguage = (lang: Language) => {
    setLanguage(lang);
    localStorage.setItem('language', lang);
  };

  const t = (key: string): string => {
    return translations[language][key as keyof typeof translations['en']] || key;
  };

  return (
    <LanguageContext.Provider value={{ language, setLanguage: handleSetLanguage, t }}>
      {children}
    </LanguageContext.Provider>
  );
};

export const useLanguage = () => {
  const context = useContext(LanguageContext);
  if (!context) {
    throw new Error('useLanguage must be used within a LanguageProvider');
  }
  return context;
};